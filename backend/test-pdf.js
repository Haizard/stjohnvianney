const mongoose = require('mongoose');
const PDFDocument = require('pdfkit');
const fs = require('fs');
const path = require('path');

// Import models
const Result = require('./models/Result');
const Student = require('./models/Student');
const Exam = require('./models/Exam');
const Subject = require('./models/Subject');

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/school_management')
  .then(() => console.log('Connected to MongoDB'))
  .catch(err => {
    console.error('MongoDB connection error:', err);
    process.exit(1);
  });

// Test function to generate a simple PDF
const generateTestPDF = () => {
  const doc = new PDFDocument();
  const outputPath = path.join(__dirname, 'test-output.pdf');
  
  // Pipe the PDF to a file
  doc.pipe(fs.createWriteStream(outputPath));
  
  // Add content to the PDF
  doc.fontSize(25).text('Test PDF Document', 100, 100);
  doc.fontSize(12).text('This is a test PDF document generated by the test script.', 100, 150);
  
  // Finalize the PDF
  doc.end();
  
  console.log(`Test PDF generated at: ${outputPath}`);
};

// Test function to check if we can find a student
const findStudent = async (studentId) => {
  try {
    const student = await Student.findById(studentId);
    console.log('Student found:', student ? 'Yes' : 'No');
    if (student) {
      console.log('Student details:', {
        id: student._id,
        name: `${student.firstName} ${student.lastName}`,
        rollNumber: student.rollNumber
      });
    }
  } catch (err) {
    console.error('Error finding student:', err);
  }
};

// Test function to check if we can find an exam
const findExam = async (examId) => {
  try {
    const exam = await Exam.findById(examId);
    console.log('Exam found:', exam ? 'Yes' : 'No');
    if (exam) {
      console.log('Exam details:', {
        id: exam._id,
        name: exam.name,
        type: exam.type
      });
    }
  } catch (err) {
    console.error('Error finding exam:', err);
  }
};

// Test function to check if we can find results
const findResults = async (studentId, examId) => {
  try {
    const results = await Result.find({ studentId, examId }).populate('subjectId');
    console.log('Results found:', results.length);
    if (results.length > 0) {
      console.log('Sample result:', {
        id: results[0]._id,
        marks: results[0].marks,
        grade: results[0].grade,
        subject: results[0].subjectId ? results[0].subjectId.name : 'Unknown'
      });
    }
  } catch (err) {
    console.error('Error finding results:', err);
  }
};

// Run the tests
const runTests = async () => {
  // Test PDF generation
  generateTestPDF();
  
  // Test with the provided IDs
  const studentId = '67ed2f6a67cca113a65d77a8';
  const examId = '67ed30104e5593926a17a617';
  
  console.log('\nTesting with studentId:', studentId, 'and examId:', examId);
  
  // Test finding student
  await findStudent(studentId);
  
  // Test finding exam
  await findExam(examId);
  
  // Test finding results
  await findResults(studentId, examId);
  
  // Disconnect from MongoDB
  mongoose.disconnect();
  console.log('Tests completed');
};

// Run the tests
runTests();
